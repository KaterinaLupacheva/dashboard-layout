{"version":3,"sources":["constants/routes.ts","contexts/drawer-context.tsx","components/Header.tsx","constants/menu.ts","components/MenuItem.tsx","components/MenuItemsList.tsx","components/Drawer.tsx","components/Footer.tsx","components/Layout.tsx","pages/dashboard.tsx","pages/orders.tsx","pages/customers.tsx","pages/inventory.tsx","App.tsx","index.tsx"],"names":["ROUTES","DrawerContext","createContext","undefined","DrawerContextProvider","children","useState","isOpened","toggleIsOpened","Provider","value","useDrawerContext","context","useContext","Error","useStyles","makeStyles","theme","appBar","background","palette","primary","dark","color","secondary","light","icon","padding","spacing","title","margin","Header","classes","AppBar","className","Toolbar","IconButton","onClick","Typography","variant","DRAWER_LIST","route","literal","Icon","DashboardIcon","ShoppingCartIcon","PeopleIcon","AttachMoneyIcon","createStyles","button","backgroundColor","common","white","selected","listIcon","minWidth","paddingRight","main","MenuItem","link","ListItem","ListItemIcon","ListItemText","to","MenuItemsList","pathname","useLocation","Grid","List","map","drawer","position","closed","transition","transitions","create","easing","sharp","duration","leavingScreen","width","overflowX","opened","enteringScreen","CustomDrawer","useTheme","isLargeScreen","useMediaQuery","breakpoints","up","Drawer","open","onClose","paper","clsx","footer","Footer","root","textAlign","display","flexDirection","minHeight","container","flex","Layout","DashboardPage","OrdersPage","CustomersPage","InventoryPage","App","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b707867.chunk.js","sourcesContent":["export const ROUTES = {\r\n  main: \"/dashboard\",\r\n  orders: \"/orders\",\r\n  customers: \"/customers\",\r\n  inventory: \"/inventory\",\r\n};\r\n","import { createContext, useState, useContext } from \"react\";\r\n\r\ntype DrawerContextType = {\r\n  isOpened: boolean;\r\n  toggleIsOpened: (value: boolean) => void;\r\n};\r\n\r\ntype DrawerContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst DrawerContext = createContext<DrawerContextType | undefined>(undefined);\r\n\r\nconst DrawerContextProvider = ({ children }: DrawerContextProviderProps) => {\r\n  const [isOpened, toggleIsOpened] = useState(false);\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ isOpened, toggleIsOpened }}>\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n};\r\n\r\nconst useDrawerContext = () => {\r\n  const context = useContext(DrawerContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useDrawerContext must be used within a DrawerContextProvider\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { DrawerContextProvider, useDrawerContext };\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useDrawerContext } from \"../contexts/drawer-context\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  appBar: {\r\n    background: theme.palette.primary.dark,\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  icon: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  title: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const { isOpened, toggleIsOpened } = useDrawerContext();\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleIsOpened(!isOpened)}\r\n          className={classes.icon}\r\n        >\r\n          {isOpened ? <ChevronLeftIcon /> : <MenuIcon />}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Header\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { DrawerItem } from '../ts';\r\nimport { ROUTES } from './routes';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nexport const DRAWER_LIST: DrawerItem[] = [\r\n  {\r\n    route: ROUTES.main,\r\n    literal: 'Dashboard',\r\n    Icon: DashboardIcon,\r\n  },\r\n  {\r\n    route: ROUTES.orders,\r\n    literal: 'Orders',\r\n    Icon: ShoppingCartIcon,\r\n  },\r\n  {\r\n    route: ROUTES.customers,\r\n    literal: 'Customers',\r\n    Icon: PeopleIcon,\r\n  },\r\n  {\r\n    route: ROUTES.inventory,\r\n    literal: 'Inventory',\r\n    Icon: AttachMoneyIcon,\r\n  },\r\n];\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  createStyles,\r\n  darken,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { DrawerItem } from \"../ts\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.white,\r\n      },\r\n      \"&$selected\": {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    selected: {},\r\n    listIcon: {\r\n      minWidth: \"auto\",\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    icon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = DrawerItem & {\r\n  selected?: boolean;\r\n  onClick?: () => void;\r\n};\r\n\r\nconst MenuItem: React.FC<Props> = ({\r\n  route,\r\n  literal,\r\n  Icon,\r\n  selected,\r\n  onClick,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const link = (\r\n    <ListItem\r\n      button\r\n      selected={selected}\r\n      classes={{\r\n        selected: classes.selected,\r\n        button: classes.button,\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <ListItemIcon className={classes.listIcon}>\r\n        <Icon className={classes.icon} />\r\n      </ListItemIcon>\r\n      <ListItemText primary={literal} />\r\n    </ListItem>\r\n  );\r\n  return route ? <Link to={route}>{link}</Link> : link;\r\n};\r\n\r\nexport default MenuItem;\r\n","import List from \"@material-ui/core/List\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DRAWER_LIST } from \"../constants/menu\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  padding: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nconst MenuItemsList = () => {\r\n  const classes = useStyles();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Grid>\r\n      <List className={classes.padding}>\r\n        {DRAWER_LIST.map(({ literal, route, Icon }) => (\r\n          <MenuItem\r\n            Icon={Icon}\r\n            literal={literal}\r\n            route={route}\r\n            key={route}\r\n            selected={pathname === route}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MenuItemsList;\r\n","import Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuItemsList from \"./MenuItemsList\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useDrawerContext } from \"../contexts/drawer-context\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  drawer: {\r\n    background: \"#D8DCD6\",\r\n    position: \"static\",\r\n  },\r\n  closed: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7) + 1,\r\n    overflowX: \"hidden\",\r\n  },\r\n  opened: {\r\n    width: \"240px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n}));\r\n\r\nconst CustomDrawer = () => {\r\n  const classes = useStyles();\r\n  const { isOpened, toggleIsOpened } = useDrawerContext();\r\n  const theme = useTheme();\r\n  const isLargeScreen = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isLargeScreen ? \"permanent\" : \"temporary\"}\r\n      open={!isLargeScreen && isOpened ? true : false}\r\n      onClose={() => toggleIsOpened(!isOpened)}\r\n      classes={{\r\n        paper: clsx(classes.drawer, {\r\n          [classes.closed]: !isOpened,\r\n          [classes.opened]: isOpened,\r\n        }),\r\n      }}\r\n    >\r\n      <MenuItemsList />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default CustomDrawer;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  footer: {\r\n    background: theme.palette.primary.dark,\r\n    color: theme.palette.secondary.light,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      <Typography variant=\"h6\">Footer</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ReactNode } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Header from \"./Header\";\r\nimport Drawer from \"./Drawer\";\r\nimport Footer from \"./Footer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport { DrawerContextProvider } from \"../contexts/drawer-context\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n  },\r\n  main: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  children: NonNullable<ReactNode>;\r\n};\r\n\r\nconst Layout: React.FC<Props> = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <DrawerContextProvider>\r\n      <div className={classes.root}>\r\n        <Header />\r\n        <Toolbar />\r\n        <div className={classes.container}>\r\n          <Drawer />\r\n          <main className={classes.main}>{children}</main>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </DrawerContextProvider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","const DashboardPage = () => <div>Dashboard</div>;\r\n\r\nexport default DashboardPage;\r\n","const OrdersPage = () => <div>Orders</div>;\r\n\r\nexport default OrdersPage;\r\n","const CustomersPage = () => <div>Customers</div>;\r\n\r\nexport default CustomersPage;\r\n","const InventoryPage = () => <div>Inventory</div>;\r\n\r\nexport default InventoryPage;\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { ROUTES } from \"./constants/routes\";\r\nimport Layout from \"./components/Layout\";\r\nimport {\r\n  DashboardPage,\r\n  CustomersPage,\r\n  OrdersPage,\r\n  InventoryPage,\r\n} from \"./pages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/\" exact render={() => <Redirect to={ROUTES.main} />} />\r\n        <Route exact path={ROUTES.main} component={DashboardPage} />\r\n        <Route exact path={ROUTES.orders} component={OrdersPage} />\r\n        <Route exact path={ROUTES.customers} component={CustomersPage} />\r\n        <Route exact path={ROUTES.inventory} component={InventoryPage} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}